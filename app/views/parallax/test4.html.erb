<div id="scrollValue"></div>
<div id="center"></div>
<canvas id="sample1" style="background-color:#ffffff;">
</canvas>



<script type="text/javascript">
<!--

var canvas, context, b, d;
var centerX, centerY, scroll;
var boxsize;
var list_adj;

window.onload = function() {
  setCenter();
  init();
}

function init() {
  canvas = document.getElementById('sample1');
  canvas.height = 4000;
  context = canvas.getContext('2d');
  b = document.body;
  d = document.documentElement;
  canvas.width = Math.max(b.clientWidth , b.scrollWidth, d.scrollWidth, d.clientWidth);
  boxsize = 170;
  scroll = 0;
  list_adj = new Array(0, 20, 10, 7, 6, 5.5, 4.7);

  dot();
  /*
  layer_1();
  layer_2();
  layer_3();
  layer_4();
  layer_5();
  layer_6();
  layer_7();
  */
  for (l = 0; l < 7; l++) {
    layer(l);
  }
}

function draw(x, y, scroll, size) {
  if (canvas.getContext) {
    context.globalAlpha = 0.2;
    context.fillRect(x, y+scroll, size, size); 
    context.fill();
  }
}

function layer(layNum){
  var x,y,adjY,adjusted,abs;
  var startPoint;
  var layBoxSize;;

  for (h=0; h<5; h++){
    startPoint = 85 - (layNum * 4);
    layBoxSize = boxsize - (8 * (layNum + 1));


    // 四角形の左上
    x = centerX - startPoint;
    if (h==0) {
      x = x - 600
    } else if (h==1) {
      x = x - 300
    } else if (h==2) {
      x = x - 0
    } else if (h==3) {
      x = x + 300
    } else if (h==4) {
      x = x + 600
    }
    y = centerY - startPoint - scroll;

    adjusted = 0;
    for (i=0; i<10; i++){
      if (layNum > 0) {
        abs = centerY - y - startPoint;
        adjY = Math.floor(Math.abs(abs) / list_adj[layNum]);

        if ((y + startPoint) < centerY){
          adjusted = y + adjY;
        } else if ((y + startPoint) > centerY) {
          adjusted = y - adjY;
        } else if (y + startPoint == centerY){
          adjusted = y;
        }
      } else {
        adjusted = y;
      }

      var x_adj;
      if (h==0) {
        x_adj = 20;
      } else if (h==1) {
        x_adj = 10;
      } else if (h==2) {
        x_adj = 0;
      } else if (h==3) {
        x_adj = -10;
      } else if (h==4) {
        x_adj = -20;
      }
      draw(x+layNum*x_adj, adjusted, 0, layBoxSize);
      y = y + 300;
    }
  }
}

function layer_1(){
  var x,y;
  // 1列目
  // 2列目
  // 3列目
  x = centerX - 85;
  y = centerY - 85 - scroll;
  for (i=0; i<10; i++){
    draw(x, y, 0, boxsize);
    y = y + 300;
  }
  // 4列目
  // 5列目
}

function layer_2(){
  var x,y,adjY,adjusted,abs;

  // 四角形の左上
  x = centerX - 81;
  y = centerY - 81 - scroll;

  adjusted = 0;
  for (i=0; i<10; i++){
    abs = centerY - y - 81;
    //context.fillText(abs, 120, adjusted+81); // 中央座標Yとの差

    adjY = Math.floor(Math.abs(abs) / 20);
    //context.fillText(adjY, 160, adjusted+81); // レイヤー調整値

    if ((y+81) < centerY){
      adjusted = y + adjY;
    } else if ((y+81) > centerY) {
      adjusted = y - adjY;
    } else if (y+81 == centerY){
      adjusted = y;
    }
    //context.fillText(y+81, 90, adjusted+81);
    draw(x, adjusted, 0, boxsize - 8);
    y = y + 300;
  }
}

function layer_3(){
  var x,y,adjY,adjusted,abs;

  // 四角形の左上
  x = centerX - 77;
  y = centerY - 77 - scroll;

  adjusted = 0;
  for (i=0; i<10; i++){
    abs = centerY - y - 77;
    //context.fillText(abs, 120, adjusted+90); // 中央座標Yとの差

    adjY = Math.floor(Math.abs(abs) / 10);
    //context.fillText(adjY, 160, adjusted+90); // レイヤー調整値

    if ((y+77) < centerY){
      adjusted = y + adjY;
    } else if ((y+77) > centerY) {
      adjusted = y - adjY;
    } else if (y+77 == centerY){
      adjusted = y;
    }
    //context.fillText(y+77, 90, adjusted+90);
    draw(x, adjusted, 0, boxsize - 16);
    y = y + 300;
  }
}

function layer_4(){
  var x,y,adjY,adjusted,abs;

  // 四角形の左上
  x = centerX - 73;
  y = centerY - 73 - scroll;

  adjusted = 0;
  for (i=0; i<10; i++){
    abs = centerY - y - 73;
    //context.fillText(abs, 120, adjusted+95); // 中央座標Yとの差

    adjY = Math.floor(Math.abs(abs) / 7);
    //context.fillText(adjY, 160, adjusted+95); // レイヤー調整値

    if ((y+73) < centerY){
      adjusted = y + adjY;
    } else if ((y+73) > centerY) {
      adjusted = y - adjY;
    } else if (y+73 == centerY){
      adjusted = y;
    }
    //context.fillText(y+73, 90, adjusted+95);
    draw(x, adjusted, 0, boxsize - 24);
    y = y + 300;
  }
}

function layer_5(){
  var x,y,adjY,adjusted,abs;

  // 四角形の左上
  x = centerX - 69;
  y = centerY - 69 - scroll;

  adjusted = 0;
  for (i=0; i<10; i++){
    abs = centerY - y - 69;
    //context.fillText(abs, 120, adjusted+100); // 中央座標Yとの差

    adjY = Math.floor(Math.abs(abs) / 6);
    //context.fillText(adjY, 160, adjusted+100); // レイヤー調整値

    if ((y+69) < centerY){
      adjusted = y + adjY;
    } else if ((y+69) > centerY) {
      adjusted = y - adjY;
    } else if (y+69 == centerY){
      adjusted = y;
    }
    //context.fillText(y+69, 90, adjusted+100);
    draw(x, adjusted, 0, boxsize - 32);
    y = y + 300;
  }
}

function layer_6(){
  var x,y,adjY,adjusted,abs;

  // 四角形の左上
  x = centerX - 65;
  y = centerY - 65 - scroll;

  adjusted = 0;
  for (i=0; i<10; i++){
    abs = centerY - y - 65;
    //context.fillText(abs, 120, adjusted+105); // 中央座標Yとの差

    adjY = Math.floor(Math.abs(abs) / 5.5);
    //context.fillText(adjY, 160, adjusted+105); // レイヤー調整値

    if ((y+65) < centerY){
      adjusted = y + adjY;
    } else if ((y+65) > centerY) {
      adjusted = y - adjY;
    } else if (y+65 == centerY){
      adjusted = y;
    }
    //context.fillText(y+65, 90, adjusted+105);
    draw(x, adjusted, 0, boxsize - 40);
    y = y + 300;
  }
}

function layer_7(){
  var x,y,adjY,adjusted,abs;

  // 四角形の左上
  x = centerX - 61;
  y = centerY - 61 - scroll;

  adjusted = 0;
  for (i=0; i<10; i++){
    abs = centerY - y - 61;
    //context.fillText(abs, 120, adjusted+110); // 中央座標Yとの差

    adjY = Math.floor(Math.abs(abs) / 4.7);
    //context.fillText(adjY, 160, adjusted+110); // レイヤー調整値

    if ((y+61) < centerY){
      adjusted = y + adjY;
    } else if ((y+61) > centerY) {
      adjusted = y - adjY;
    } else if (y+61 == centerY){
      adjusted = y;
    }
    //context.fillText(y+61, 90, adjusted+110);
    draw(x, adjusted, 0, boxsize - 48);
    y = y + 300;
  }
}

/*
function layer_3(){
  var x,y;
  // 1列目
  // 2列目
  // 3列目
  x = centerX - 77;
  y = centerY - 77 - scroll;
  for (i=0; i<10; i++){
    draw(x, y, scroll/10, boxsize - 16);
    y = y + 300;
  }
  // 4列目
  // 5列目
}

function layer_4(){
  var x,y;
  // 1列目
  // 2列目
  // 3列目
  x = centerX - 73;
  y = centerY - 73 - scroll;
  for (i=0; i<10; i++){
    draw(x, y, scroll/7, boxsize - 24);
    y = y + 300;
  }
  // 4列目
  // 5列目
}

function layer_5(){
  var x,y;
  // 1列目
  // 2列目
  // 3列目
  x = centerX - 69;
  y = centerY - 69 - scroll;
  for (i=0; i<10; i++){
    draw(x, y, scroll/6, boxsize - 32);
    y = y + 300;
  }
  // 4列目
  // 5列目
}
*/

$(function() {
  $(window).scroll(function() {
    setCenter();
    scroll = $(this).scrollTop();
    $('#scrollValue').text($(this).scrollTop());
    $('#center').text(centerX + ", " + centerY);
    canvas.height = 4000;
    dot();
    for (l = 0; l < 7; l++) {
      layer(l);
    }
    /*
    layer_1();
    layer_2();
    layer_3();
    layer_4();
    layer_5();
    layer_6();
    layer_7();
    */
    //context.fillText(scroll, 30, centerY)
    //context.fillText(centerY, 60, centerY)
  });
});

function setCenter(){
  centerX = $(window).width() / 2;
  centerY = $(window).scrollTop() + 340;
}

function dot() {
  if (canvas.getContext) {
    context.beginPath();
    context.arc(centerX, centerY, 3, Math.PI*2, false);
    context.fill();
  }
}

// -->
</script>
